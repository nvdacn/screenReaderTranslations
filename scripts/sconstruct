# -*- coding: utf-8 -*-
import os
import sys
from addresses import addresses

env = Environment(tools=['default', 'textfile'] )

### misc functions ###
def makeFileList(filesWanted, searchDirs = '.'):
    srcsMissing = []
    srcsFound = []
    for file in filesWanted:
        f = FindFile(file, searchDirs)
        if f:
            srcsFound.append(f)
        else:
            srcsMissing.append(file)
    return (srcsFound, srcsMissing)


def processLang(lang):
    srcsWanted = {
        'nvda.po': { 
            'tPath': BZRDIR+ "source/locale/"+ lang + "/LC_MESSAGES/",
            'tName': "nvda.po",
        },
        'symbols.dic': { 
            'tPath': BZRDIR+ "source/locale/"+ lang+ "/",
            'tName': "symbols.dic",
        },
        'changes.t2t': {
            'tPath': BZRDIR+ "user_docs/"+ lang+ "/",
            'tName': "changes.t2t",
            'infoCmd': 'ls -1 '+ lang+ '/ch-diffs/ | head -n 1'
        },
        'userGuide.t2t': {
            'tPath': BZRDIR+ "user_docs/"+ lang+ "/",
            'tName': "userGuide.t2t",
            'infoCmd': 'ls -1 '+ lang+ '/ug-diffs/ | head -n 1'
        },
    }


    srcsFound, srcsMissing = makeFileList(srcsWanted.keys(), searchDirs=lang)
    installFiles = []
    for file in srcsFound:
        tFullName = srcsWanted[file.name]['tPath'] + srcsWanted[file.name]['tName']
        installFiles.append(env.InstallAs(tFullName, source=file))
    # find out what files bzr thinks have been changed.
    cmd = "bzr status -SV "+ BZRDIR+ " | awk '{print $2}' | grep "+ lang
    changedFiles = os.popen(cmd).read().split('\n')[:-1]
    if not changedFiles:
        return [installFiles, srcsMissing]

    data = {}
    for file in srcsFound:
        infoCmd = srcsWanted[file.name].get('infoCmd', '')
        if file.name in [x.split('/')[-1] for x in changedFiles]:
            if infoCmd:
                data[file.name] = " ".join(os.popen(infoCmd).read().split('\n')[:-1])
            else:
                data[file.name] = ''

    authors = []
    for author in addresses[lang]['email']:
        authors.append("--author='%s' \\" %author)

    cmLines = ["#!/bin/bash",
        "bzr commit \\",
    ]
    cmLines.extend(authors)
    cmLines.extend([
        "-m \\",
        "'%s (%s):" %(addresses[lang]['lang'], lang)
    ])
    cmLines.extend(["  %s matching %s" %(x, data[x]) if data[x] else
        "  %s" %x for x in data.keys()])
    cmLines.extend(["' \\", " \\\n".join(changedFiles)])

    # mesar here i am
    lang_sh = env.Textfile(Dir(BZRDIR).File(lang+ ".sh"), cmLines)
    env.Install(lang_sh)
    installFiles.append(lang_sh)
    return [installFiles, srcsMissing]

### end misc functions ###

if not COMMAND_LINE_TARGETS:
    print "need a language code or a list of language codes."
    sys.exit()
#bzrpath
#BZRDIR='main/'
BZRDIR='translation/'

for lang in COMMAND_LINE_TARGETS:
    if lang in addresses.keys():
        installed, missing = processLang(lang)
        env.Alias(lang, installed)
        if missing:
            print "Warning: unable to find: %s" %str(missing)
