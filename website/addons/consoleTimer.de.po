# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2017-06-03 04:36+1000\n"
"PO-Revision-Date: 2017-12-04 21:32+0100\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: Adriani Botez <adriani.botez@gmail.com>\n"
"Language-Team: \n"
"X-Generator: Poedit 1.5.7\n"

#. type: Plain text
#, no-wrap
msgid "[[!meta title=\"Console Timer\"]]\n"
msgstr "[[!meta title=\"Console Timer\"]]\n"

#. type: Plain text
#, no-wrap
msgid ""
"*   Author: Derek Riemer\n"
"* Download [Stable Version][1]\n"
msgstr ""
"* Autor: Derek Riemer\n"
"*   Download [stabile Version][1]\n"

#. type: Title #
#, no-wrap
msgid "consoleTimer"
msgstr "consoleTimer"

#. type: Plain text
msgid ""
"consoleTimer was written by derek riemer, and is GPL V2, as required by "
"being an NVDA addon."
msgstr ""
"consoleTimer wurde von derek riemer geschrieben und ist GPL V2, da es sich "
"um eine NVDA-Erweiterung handelt."

#. type: Bullet: '* '
msgid ""
"[Source available on Github:](https://github.com/derekriemer/consoleTimer)"
msgstr ""
"[Quellcode auf Github verfügbar:](https://github.com/derekriemer/"
"consoleTimer)"

#. type: Title ##
#, no-wrap
msgid "Background"
msgstr "Hintergrund"

#. type: Plain text
msgid ""
"When using command lines over ssh, usually, there's network lag. This lag is "
"expected, however, the way NVDA handles cursor movement is not friendly with "
"lag in terminals, because this operation is a synchrinous opperation. This "
"causes NVDA to wrongly report the wrong letter when moving to another letter "
"with the arrow keys. For example, if the user is on the p of grep, and they "
"press right arrow, they may hear \"t\" instead of space. This is due to NVDA "
"not waiting long enough to actually properly handle this cursor movement.  "
"This addon was written because I do lots of server administration, and I "
"wanted cursor navigation to work."
msgstr ""
"Bei der Verwendung von Befehlszeilen über ssh kommt es normalerweise zu "
"einer Verzögerung im Netzwerk. Diese Verzögerung wird erwartet, jedoch ist "
"die Handhabung der Cursorbewegung von NVDA nicht mit der Verzögerung in den "
"Terminals kompatibel. Dies liegt daran, dass diese Operation synchron ist. "
"Dies führt dazu, dass NVDA den falschen Buchstaben meldet, wenn Sie mit den "
"Pfeiltasten zu einem anderen Buchstaben wechseln. Zum Beispiel, wenn Sie auf "
"dem p von grep sind und Sie drücken Pfeil nach rechts, können sie hören \"t"
"\" anstelle von Leerzeichen. Dies ist darauf zurückzuführen, dass NVDA nicht "
"lange genug gewartet hat, um diese Cursorbewegung tatsächlich richtig zu "
"interpretieren.  Diese Erweiterung habe ich erstellt, weil ich sehr viel mit "
"Serveradministration zu tun habe und eine funktionierende Cursor-Navigation "
"sehr wichtig ist."

#. type: Title ##
#, no-wrap
msgid "TLDR usage instructions"
msgstr "TLDR Anwenderinstruktionen"

#. type: Plain text
msgid ""
"When in a console, if NVDA is missing or repeating letters as you move "
"around, simply press nvda+shift+pageup to teach it to be more patient, or if "
"it is too laggy, press nvda+shift+page down to teach it to be less patient. "
"This addon will have no affect outside terminals, and the patience changes "
"by .01 for every keypress."
msgstr ""
"Wenn Sie sich in einer Konsole befinden und NVDA beim Rumbewegen fehlschlägt "
"oder Buchstaben wiederholt werden, drücken Sie einfach nvda+Umschalt+Seite "
"auf. Somit bringen Sie NVDA bei, geduldiger zu sein, umd die Cursorbewegung "
"rihchtig zu interpretieren. Wenn NVDA zu langsam ist, drücken Sie nvda"
"+Umschalt+Seite ab. So können sie NVDA beibringen schneller zu reagieren. "
"Diese Erweiterung hat keine Auswirkungen auf externe Terminals und die "
"Wartezeit von NVDA ändert sich bei jedem Tastendruck um .01."

#. type: Title ##
#, no-wrap
msgid "How to make this work with custom terminals"
msgstr "Wie kann dies mit benutzerdefinierten Terminals funktionieren?"

#. type: Plain text
msgid ""
"If you are a developer who wants NVDA to recognize a section or portion of "
"your app as a terminal, and it isn't already, you should implement an "
"appModule for this purpose, to gain the relevant behavior, I.E. announcement "
"of new text written to stdout, etc. Please raise a ticket against [NVDA]"
"(https://github.com/nvaccess/nvda/issues/new), and we can help you get your "
"terminal appModule into the screen reader. Support for Putty, Cygwin "
"(Mintty), and secureCRT is already implemtned. Apps such as R may be "
"implemented in the future.  If your app is properly recognized as a terminal "
"by NVDA, (The termminal behavior is properly injected at runtime), this "
"addon should just work. If it doesn't, please let me know via an issue. How "
"to write an app module is out of scope for this document, but is well "
"documented in the [NVDA Developer Guide](https://www.nvaccess.org/files/nvda/"
"documentation/developerGuide.html). This example illustrates [an appModule "
"to teach NVDA that the terminal window on PuTTY is a terminal](https://"
"github.com/nvaccess/nvda/blob/master/source/appModules/putty.py). Also, "
"[Here's an example implementation for MinTTY](https://github.com/nvaccess/"
"nvda/blob/master/source/appModules/mintty.py). The most important thing to "
"make sure happens is that NVDAObjects.behaviors.Terminal is injected to the "
"class list."
msgstr ""
"Wenn Sie ein Entwickler sind und NVDA zeigen möchten, dass ein Abschnitt "
"oder einen Teil Ihrer Anwendung als Terminal zu erkennen ist, dann sollten "
"Sie ein appModule für diesen Zweck implementieren. Somit erhalten Sie das "
"entsprechende Verhalten (z.B. Ansagen von neuem Text, der in stdout "
"geschrieben wurde, etc.). Bitte erstellen Sie ein Ticket gegen [NVDA]"
"(https://github.com/nvaccess/nvda/issues/new) und wir können Sie gerne dabei "
"unterstützen Ihr Terminal appModule in den Screenreader zu implementieren. "
"Die Unterstützung für Putty, Cygwin (Mintty) und secureCRT ist bereits "
"implementiert. Apps wie R können in Zukunft implementiert werden.  Wenn Ihre "
"Anwendung von NVDA richtig als Terminal erkannt wird (Das Verhalten des "
"Terminals wird zur Laufzeit korrekt injiziert), sollte diese Erweiterung "
"einfach funktionieren. Sollte dies nicht der Fall sein, lassen Sie es mich "
"bitte wissen. Das Schreiben eines App-Moduls ist in diesem Dokument nicht "
"darstellbar, wird aber im [NVDA Entwicklerhandbuch] (https://www.nvaccess."
"org/files/nvda/documentation/developerGuide.html) ausführlich dokumentiert. "
"[Dieses Beispiel veranschaulicht ein appModul, um NVDA beizubringen, dass "
"das Terminalfenster auf PuTTY ein Terminal ist](https://github.com/nvaccess/"
"nvda/blob/master/source/appModules/putty.py). Außerdem, [Hier ist eine "
"Beispielimplementierung für MinTTY](https://github.com/nvaccess/nvda/blob/"
"master/source/appModules/mintty.py). Es ist sehr wichtig, dass NVDAObjects."
"Behaviors.Terminal in die Klassenliste eingefügt ist."

#. type: Plain text
#, no-wrap
msgid "[[!tag dev stable]]\n"
msgstr "[[!tag dev stable]]\n"

#. type: Plain text
msgid "[1]: https://addons.nvda-project.org/files/get.php?file=cont"
msgstr "[1]: https://addons.nvda-project.org/files/get.php?file=cont"

#. type: Plain text
msgid "[2]: https://derekriemer.com/node/44"
msgstr "[2]: https://derekriemer.com/node/44"
